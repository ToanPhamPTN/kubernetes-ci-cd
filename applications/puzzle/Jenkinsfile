node {

    checkout scm

    env.DOCKER_API_VERSION="1.24"

    sh "git rev-parse --short HEAD > commit-id"

    //tag = readFile('commit-id').replace("\n", "").replace("\r", "")
    tag="git rev-parse --short HEAD"
    appName = "puzzle"
    registryHost = "192.168.49.2:30400/"
    imageName = "${registryHost}${appName}:${tag}"
    // latestImage = "${registryHost}${appName}:latest"

    env.BUILDIMG=imageName
    env.BUILD_TAG=tag

    stage("Build") {
        sh "docker build -t ${imageName} applications/puzzle"
        //sh "docker build -t ${imageName} -t ${latestImage} -f applications/puzzle/Dockerfile applications/puzzle"
        println "Build docker completed."
    }

    stage("Push") {
        sh "docker push ${imageName}"
        //sh "docker push ${latestImage}"
    }

// BUILD_TAG=`git rev-parse --short HEAD`

// # #Build the docker image
// docker build -t 192.168.49.2:30400/puzzle:$BUILD_TAG -f applications/puzzle/Dockerfile applications/puzzle

// # #Setup the proxy for the registry
// # #docker stop socat-registry; docker rm socat-registry; docker run -d -e "REG_IP=`minikube ip`" -e "REG_PORT=30400" --name socat-registry -p 30400:5000 socat-registry

// echo "5 second sleep to make sure the registry is ready"
// sleep 5;

// # #Push the images
// docker push 192.168.49.2:30400/puzzle:$BUILD_TAG

    stage("Deploy") {
        //kubernetesDeploy configs: "applications/${appName}/k8s/*.yaml", kubeconfigId: 'kenzan_kubeconfig'
        sh "echo Deploying application..."
        
        sh "kubectl config view"
        sh "kubectl get nodes"
        sh "kubectl apply -f applications/${appName}/k8s/"
        sh "kubectl rollout restart deployment/${appName}"
    }    
}
